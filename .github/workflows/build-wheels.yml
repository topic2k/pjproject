name: Build wheels for pjsua2

on:
  release:
    types: [created]
  push:
    branches: [ wheels ]

jobs:
  job_linux_x86_64:
    if: github.ref_name == 'main'
    runs-on: ubuntu-latest
    name: Build Linux x86_64 wheels
    steps:
      - name: Checkout branch 
        uses: actions/checkout@v3
        with:
          fetch-depth: 1
          ref: wheels

      - name: Linux x86_64 wheels
        uses: RalfG/python-wheels-manylinux-build@v0.7.1-manylinux2014_x86_64
        with:
          python-versions: 'cp310-cp310'
          build-requirements: 'pydub requests PyYAML typing_extensions'
          system-packages: 'epel-release swig python3-devel'
          package-path: 'pjsip-apps/src/swig/python'
          pre-build-command: 'sh build-pjsua2.sh'

      - name: Archive production artifacts
        uses: actions/upload-artifact@v3
        with:
          name: pjsua2-wheels
          path: |
            pjsip-apps/src/swig/python/dist/*
        
  job_linux_aarch64:
    runs-on: ubuntu-latest
    name: Build Linux aarch64 wheels
    steps:
      - name: Checkout branch 
        uses: actions/checkout@v3
        with:
          fetch-depth: 1
          ref: wheels
          
      - name: Linux aarch64 wheels
        uses: danhunsaker/run-on-arch-action@pass-arch-to-docker
        id: runcmd
        with:
          arch: none  # aarch64
          distro: none  # alpine_latest
          base_image: homeassistant/raspberrypi4-64-homeassistant
          run: |
            apk add ffmpeg ffmpeg-dev git swig python3 py3-pip python3-dev build-base
            ls -la
            ./configure --enable-shared --disable-libwebrtc
            make dep
            make
            make install
            cd pjsip-apps/src/swig
            make python


#      - name: Linux aarch64 wheels
#        uses: RalfG/python-wheels-manylinux-build@v0.7.1-manylinux2014_aarch64
#        with:
#          python-versions: 'cp310-cp310'
#          build-requirements: 'pydub requests PyYAML typing_extensions'
#          system-packages: 'epel-release swig python3-devel'
#          package-path: '/pjsip-apps/src/swig/python'
#          pre-build-command: 'sh build-pjsua2.sh'

#      - name: Archive production artifacts
#        uses: actions/upload-artifact@v3
#        with:
#          name: pjsua2-wheels
#          path: |
#            "${{ steps.runcmd.outputs.uname }}"
    
#    - name: Publish wheels to PyPI
#      env:
#        TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
#        TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
#      run: |
#        twine upload dist/*-manylinux*.whl
