name: Build wheels for pjsua2

on:
  release:
    types: [created]
  push:
    branches: [ wheels ]

jobs:
  job_linux_x86_64:
    runs-on: ubuntu-latest
    name: Build Linux x86_64 wheels
    steps:
      - name: Checkout branch 
        uses: actions/checkout@v3
        with:
          fetch-depth: 1
          ref: wheels

      - name: Linux x86_64 wheels
        uses: RalfG/python-wheels-manylinux-build@v0.7.1-manylinux2014_x86_64
        with:
          python-versions: 'cp310-cp310'
          build-requirements: 'pydub requests PyYAML typing_extensions'
          system-packages: 'epel-release swig python3-devel'
          package-path: 'pjsip-apps/src/swig/python'
          pre-build-command: 'sh build-pjsua2.sh'

      - name: Archive production artifacts
        uses: actions/upload-artifact@v3
        with:
          path: pjsip-apps/src/swig/python/dist/*
        
  job_linux_aarch64:
    runs-on: ubuntu-latest
    name: Build Linux aarch64 wheels
    steps:
      - name: Checkout branch 
        uses: actions/checkout@v3
        with:
          fetch-depth: 1
          ref: wheels
          
      - name: Linux aarch64 wheels
        uses: uraimo/run-on-arch-action@release-3.0.0
        id: runcmd
        with:
          arch: none
          distro: none
          base_image: homeassistant/raspberrypi4-64-homeassistant

          # Not required, but speeds up builds
          githubToken: ${{ github.token }}
          # Create an artifacts directory
          setup: |
            mkdir -p "${PWD}/artifacts"
          # Mount the artifacts directory as /artifacts in the container
          dockerRunArgs: |
            --volume "${PWD}/artifacts:/artifacts"
          install: |
            apk update
            apk add ffmpeg ffmpeg-dev git swig python3 py3-pip python3-dev build-base gcc gcc-cross-embedded linux-headers
            pip install wheel
          run: |
            ./configure --enable-shared --disable-libwebrtc
            make dep
            make
            make install
            cd pjsip-apps/src/swig
            make python
            cd python
            make wheel
            cp -R dist /artifacts/

      - name: Archive production artifacts
        uses: actions/upload-artifact@v3
        with:
          path: |
            "${PWD}/artifacts"

#    - name: Publish wheels to PyPI
#      env:
#        TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
#        TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
#      run: |
#        twine upload dist/*-manylinux*.whl
